services:
  api:
    build: .
    container_name: api
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - API_PORT=${API_PORT}
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - DATABASE_URL=mysql://${DB_USER}:${DB_PASSWORD}@mysql-db:3306/${DB_DATABASE}
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:${API_PORT}/api/v0/health', (res) => { process.exit(res.statusCode == 200 ? 0 : 1) }).on('error', (err) => { process.exit(1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - traefik
    labels:
      traefik.enable: "true"
      traefik.http.routers.portainer.rule: "Host(`simple-crud.matheusdcunha.cloud`)"
      traefik.http.routers.portainer.entrypoints: "websecure"
      traefik.http.routers.portainer.tls.certresolver: "myresolver"
      traefik.http.services.portainer.loadbalancer.server.port: "${API_PORT}"

networks:
  traefik:
    external: true